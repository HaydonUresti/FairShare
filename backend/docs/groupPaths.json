{
  "/api/groups/{userId}/createGroup": {
    "post": {
      "tags": [
        "Groups"
      ],
      "summary": "Create a group",
      "description": "This endpoint creates a group.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "The user ID of the group creator"
                },
                "groupName": {
                  "type": "string",
                  "description": "The name of the group"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the group"
                }
              },
              "required": [
                "userId",
                "groupName",
                "description"
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Group created successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Group created successfully"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/groups/{userId}/groups": {
    "get": {
      "tags": [
        "Groups"
      ],
      "summary": "Get all groups of a user",
      "description": "Get all groups of a user",
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "All groups of a user",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Group"
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/groups/{userId}/groups/{groupId}/addUser": {
    "post": {
      "tags": [
        "Groups"
      ],
      "summary": "Add a user to a group",
      "description": "This endpoint adds a user to a group.",
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email of the user to be added to the group"
                }
              },
              "required": [
                "email"
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "User added to group successfully",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "User added to group successfully"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/groups/owner/{ownerId}/groupName/{groupName}": {
    "get": {
      "tags": [
        "Groups"
      ],
      "summary": "Get group by owner ID and group name",
      "description": "This endpoint returns a group by owner ID and group name.",
      "parameters": [
        {
          "name": "ownerId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "groupName",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Group returned successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "400": {
          "description": "Group not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Group not found"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/api/groups/{groupId}/members": {
    "patch": {
      "summary": "Add a member to a group",
      "description": "Adds a user to a group by providing the group ID and user ID.",
      "tags": [
        "Groups"
      ],
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "description": "The ID of the group",
          "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "The ID of the user to add",
                  "example": "65d1f8a8c2a15b2f4d6a1a7b"
                }
              },
              "required": [
                "userId"
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "User added successfully",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Group"
              }
            }
          }
        },
        "400": {
          "description": "Invalid groupId or userId",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Invalid groupId or userId"
                  }
                }
              }
            }
          }
        },
        "404": {
          "description": "Group not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Group not found"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "get": {
      "tags": [
        "Groups"
      ],
      "summary": "Get all members of a group",
      "description": "This endpoint returns all members of a group.",
      "parameters": [
        {
          "name": "groupId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "All members of a group",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "404": {
          "description": "Group not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Group not found"
                  }
                }
              }
            }
          }
        },
        "500": {
          "description": "Server error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "example": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}